BACKUP ~ahungry_deletefier/backup~
AUTHOR ~Ahungry~
VERSION 1.0

BEGIN ~Ahungry's Deletefier~

REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee eet iwdee~) ~Game not supported.~

PRINT ~
WARNING: You will NOT be able to complete certain quests as expected with this mod.  Accepting that
will (perhaps) add some replayability - or let CLUAConsole be your friend for items you feel
you should have received (use NearInfinity or EEKeeper on another saved game to find the item codes).

What percent of items would you like to have disappear (creatures, stores, and areas)?

   0   = no items deleted (why are you installing this mod again?)
   50  = half of all items are deleted
   100 = all items are deleted that aren't script creations/random npc loot (probably a bad idea!)

Hint: On a megamod (200+ mods) I enjoy 95 to 99 - it makes gear acquisition exciting again.

Please enter your answer as an integer. [0-100]~
ACTION_READLN ~del_per~

OUTER_WHILE NOT(IS_AN_INT %del_per%) BEGIN
  PRINT ~Your answer was not an integer.
Please enter your answer as an integer.
What percent of items would you like to have disappear?~
  ACTION_READLN ~del_per~
END

// https://gibberlings3.github.io/iesdp/file_formats/ie_formats/are_v1.htm
COPY_EXISTING_REGEXP GLOB ~^.+\.are$~ ~override~
  // Iterate through items to see replaceable ones vs deleteables
  READ_LONG  0x78 itm_off
  READ_SHORT  0x76 itm_num

  FOR (index = 0 ; index < itm_num ; ++index) BEGIN // searches through items
    READ_ASCII (itm_off + (0x14 * index)) item

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^staf[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find staff item
      WRITE_ASCII (itm_off + (0x14 * index)) "staf01" #8 // replace with staf01
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^sw1h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "sw1h01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^sw2h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "sw2h01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^dagg[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "dagg01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^ax1h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "ax1h01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^ax2h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "ax2h01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^sper[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "sper01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^hamm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "hamm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^halb[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "halb01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^blun[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "blun01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^scim[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "scim01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^waki[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "waki01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^kata[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "kata01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^sw3h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "sw3h01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^mace[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "mace01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^shld[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shld01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^shbu[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shbu01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^shlg[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shlg01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^shmd[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shmd01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^shsm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shsm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^xbow[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "xbow01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^boww[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "boww01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^slng[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "slng01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^helm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "helm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^ioun[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "helm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^cowl[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "helm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^amul[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "amul01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^boot[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "boot01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^belt[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "belt01" #8 // replace item
    END

    // clck handles cloaks AND robes for some reason...
    // PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^clck[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
    //  WRITE_ASCII (itm_off + (0x14 * index)) "clck01" #8 // replace item
    // END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^ring[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "ring01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^brac[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "brac01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^robe[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "robe01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^leat[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "leat01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^chan[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "chan01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^plat[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "plat01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^armr[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "armr01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^slea[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "slea01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^pelt[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "pelt01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^hide[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "hide01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^chan[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "chan01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^spli[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "spli01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^plah[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "plah01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^plaf[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "plaf01" #8 // replace item
    END

  END // End of item loop

  PATCH_IF RANDOM(1 100) <= %del_per% BEGIN
    LPF DELETE_AREA_ITEM STR_VAR item_to_delete = "clck.+" END
  END

  PATCH_IF RANDOM(1 100) <= %del_per% BEGIN
    LPF DELETE_AREA_ITEM STR_VAR item_to_delete = "scrl.+" END
  END

BUT_ONLY


// https://gibberlings3.github.io/iesdp/file_formats/ie_formats/sto_v1.htm
COPY_EXISTING_REGEXP GLOB ~^.+\.sto$~ ~override~
  // Iterate through items to see replaceable ones vs deleteables
  READ_LONG  0x34 itm_off
  READ_LONG  0x38 itm_num

  FOR (index = 0 ; index < itm_num ; ++index) BEGIN // searches through items
    READ_ASCII (itm_off + (0x1c * index)) item

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^\(misc\|book\)[0-9]+" != 0) AND RANDOM(1 100) <= %del_per% BEGIN // find NOT item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace with dummy item
    END
  END // End of item loop
BUT_ONLY // end of store pass 1

// A second pass on store to remove the misc17 that was added first time around
COPY_EXISTING_REGEXP GLOB ~^.+\.sto$~ ~override~
  LPF DELETE_STORE_ITEM STR_VAR item_to_delete = "misc17" END
BUT_ONLY // end of store pass 2


// https://gibberlings3.github.io/iesdp/file_formats/ie_formats/cre_v1.htm
COPY_EXISTING_REGEXP GLOB ~^.+\.cre$~ ~override~
  // Iterate through items to see replaceable ones vs deleteables
  READ_LONG  0x2bc itm_off
  READ_LONG  0x2c0 itm_num

  FOR (index = 0 ; index < itm_num ; ++index) BEGIN // searches through items
    READ_ASCII (itm_off + (0x14 * index)) item

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^staf[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find staff item
      WRITE_ASCII (itm_off + (0x14 * index)) "staf01" #8 // replace with staf01
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^sw1h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "sw1h01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^sw2h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "sw2h01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^dagg[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "dagg01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^ax1h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "ax1h01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^ax2h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "ax2h01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^sper[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "sper01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^hamm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "hamm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^halb[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "halb01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^blun[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "blun01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^scim[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "scim01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^waki[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "waki01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^kata[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "kata01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^sw3h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "sw3h01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^mace[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "mace01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^shld[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shld01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^shbu[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shbu01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^shlg[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shlg01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^shmd[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shmd01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^shsm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shsm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^xbow[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "xbow01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^boww[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "boww01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^slng[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "slng01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^helm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "helm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^ioun[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "helm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^cowl[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "helm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^amul[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "amul01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^boot[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "boot01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^belt[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "belt01" #8 // replace item
    END

    // clck handles cloaks AND robes for some reason...
    // PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^clck[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
    //  WRITE_ASCII (itm_off + (0x14 * index)) "clck01" #8 // replace item
    // END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^ring[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "ring01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^brac[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "brac01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^robe[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "robe01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^leat[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "leat01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^chan[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "chan01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^plat[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "plat01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^armr[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "armr01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^slea[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "slea01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^pelt[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "pelt01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^hide[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "hide01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^chan[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "chan01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^spli[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "spli01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^plah[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "plah01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP "^plaf[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "plaf01" #8 // replace item
    END

  END // End of the item loop

  PATCH_IF RANDOM(1 100) <= %del_per% BEGIN
    LPF DELETE_CRE_ITEM STR_VAR item_to_delete = "clck.+" END
  END

  PATCH_IF RANDOM(1 100) <= %del_per% BEGIN
    LPF DELETE_CRE_ITEM STR_VAR item_to_delete = "scrl.+" END
  END

  // TODO: Use ADD_CRE_ITEM to re-create necessary key items that got hit by this

BUT_ONLY
