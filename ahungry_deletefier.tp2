BACKUP ~ahungry_deletefier/backup~
AUTHOR ~Ahungry~
VERSION 1.0

BEGIN ~Ahungry's Deletefier~

REQUIRE_PREDICATE (GAME_IS ~bgee bg2ee eet iwdee~) ~Game not supported.~

PRINT ~
WARNING: You will NOT be able to complete certain quests as expected with this mod.  Accepting that
will (perhaps) add some replayability - or let CLUAConsole be your friend for items you feel
you should have received (use NearInfinity or EEKeeper on another saved game to find the item codes).

What percent of items would you like to have disappear (creatures, stores, and areas)?

   0   = no items deleted (why are you installing this mod again?)
   50  = half of all items are deleted
   100 = all items are deleted that aren't script creations/random npc loot (probably a bad idea!)

Hint: On a megamod (200+ mods) I enjoy 90 to 95 - it makes gear acquisition exciting again.

Please enter your answer as an integer. [0-100]~
ACTION_READLN ~del_per~

OUTER_WHILE NOT(IS_AN_INT %del_per%) BEGIN
  PRINT ~Your answer was not an integer.
Please enter your answer as an integer.
What percent of items would you like to have disappear?~
  ACTION_READLN ~del_per~
END

// https://gibberlings3.github.io/iesdp/file_formats/ie_formats/are_v1.htm
COPY_EXISTING_REGEXP GLOB ~^.+\.are$~ ~override~
  // Iterate through items to see replaceable ones vs deleteables
  READ_LONG  0x78 itm_off
  READ_SHORT  0x76 itm_num

  FOR (index = 0 ; index < itm_num ; ++index) BEGIN // searches through items
    READ_ASCII (itm_off + (0x14 * index)) item

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*staf[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find staff item
      WRITE_ASCII (itm_off + (0x14 * index)) "staf01" #8 // replace with staf01
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*sw1h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "sw1h01" #8 // replace item
    END

    // Unconventional mod weapons
    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*\(cmswq\|cmdaq\|polsw\).*" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "sw1h01" #8 // replace item
    END

    // Unconventional mod armor
    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*\(armo\|xadvb\).*" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*sw2h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "sw2h01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*dagg[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "dagg01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*ax1h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "ax1h01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*ax2h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "ax1h01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*sper[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "sper01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*hamm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "hamm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*halb[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "halb01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*blun[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "blun01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*scim[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "scim01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*waki[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "waki01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*kata[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "kata01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*sw3h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "sw3h01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*mace[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "mace01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shield[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shld01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shld[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shld01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shbu[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shbu01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shlg[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shlg01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shmd[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shmd01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shsm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "shsm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*xbow[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "xbow01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*bow[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "bow05" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*slng[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "slng01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*hel[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "helm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*helm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "helm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*ioun[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "helm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*cowl[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "helm01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*amul[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "amul01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*boot[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "boot01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*belt[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "belt01" #8 // replace item
    END

    // clck handles cloaks AND robes for some reason...
    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*clck[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
     WRITE_ASCII (itm_off + (0x14 * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*ring[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "ring01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*brac[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "brac01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*robe.*" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "clck11" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*leat[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "leat01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*chan[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "chan01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*plat[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "plat01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*armr[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "armr01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*slea[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "slea01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*pelt[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "pelt01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*hide[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "hide01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*chan[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "chan01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*spli[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "spli01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*plah[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "plah01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*plaf[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "plaf01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*arow[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "arow01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*bull[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "bull01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*bolt[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "bolt01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*dart[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "dart01" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*potn[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "potn08" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*scrl.*" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x14 * index)) "misc17" #8 // replace item
    END

    // Brute force fallback patches out a ton of stuff...
    // PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*\(staf\|sw1h\|sw2h\|dagg\|ax1h\|ax2h\|sper\|hamm\|halb\|blun\|scim\|waki\|kata\|sw3h\|mace\|shld\|shbu\|shlg\|shmd\|shsm\|xbow\|bow\|slng\|helm\|ioun\|cowl\|amul\|boot\|belt\|clck\|ring\|brac\|robe\|leat\|chan\|plat\|armr\|slea\|pelt\|hide\|chan\|spli\|plah\|plaf\|misc\|book\|bag\|potn\|arow\|dart\|bull\|bolt\)[0-9]+" != 0) AND RANDOM(1 100) <= %del_per% BEGIN // find NOT item
    //   WRITE_ASCII (itm_off + (0x14 * index)) "misc17" #8 // replace
    // END

  END // End of area item loop

BUT_ONLY // End of areas pass 1

// https://gibberlings3.github.io/iesdp/file_formats/ie_formats/are_v1.htm
COPY_EXISTING_REGEXP GLOB ~^.+\.are$~ ~override~
  LPF DELETE_AREA_ITEM STR_VAR item_to_delete = "misc17" END
BUT_ONLY // End of areas pass 2




// https://gibberlings3.github.io/iesdp/file_formats/ie_formats/sto_v1.htm
COPY_EXISTING_REGEXP GLOB ~^.+\.sto$~ ~override~
  // Iterate through items to see replaceable ones vs deleteables
  READ_LONG  0x34 itm_off
  READ_LONG  0x38 itm_num

  FOR (index = 0 ; index < itm_num ; ++index) BEGIN // searches through items
    READ_ASCII (itm_off + (0x1c * index)) item

    // PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*\(misc\|book\|bag\)[0-9]+" != 0) AND RANDOM(1 100) <= %del_per% BEGIN // find NOT item
    //   WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace with dummy item
    // END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*staf[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find staff item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace with staf01
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*sw1h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    // Unconventional mod weapons
    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*\(cmswq\|cmdaq\|polsw\).*" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    // Unconventional mod armor
    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*\(armo\|xadvb\).*" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*sw2h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*dagg[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*ax1h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*ax2h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*sper[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*hamm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*halb[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*blun[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*scim[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*waki[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*kata[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*sw3h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*mace[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shield[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shld[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shbu[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shlg[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shmd[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shsm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*xbow[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*bow[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*slng[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*hel[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*helm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*ioun[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*cowl[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*amul[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*boot[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*belt[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    // clck handles cloaks AND robes for some reason...
    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*clck[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
     WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*ring[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*brac[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*robe.*" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*leat[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*chan[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*plat[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*armr[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*slea[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*pelt[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*hide[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*chan[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*spli[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*plah[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*plaf[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*arow[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*bull[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*bolt[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*dart[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*potn[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END

    PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*scrl.*" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
      WRITE_ASCII (itm_off + (0x1c * index)) "misc17" #8 // replace item
    END


  END // End of item loop
BUT_ONLY // end of store pass 1

// A second pass on store to remove the misc17 that was added first time around
COPY_EXISTING_REGEXP GLOB ~^.+\.sto$~ ~override~
  LPF DELETE_STORE_ITEM STR_VAR item_to_delete = "misc17" END
BUT_ONLY // end of store pass 2





// https://gibberlings3.github.io/iesdp/file_formats/ie_formats/cre_v1.htm
COPY_EXISTING_REGEXP GLOB ~^.+\.cre$~ ~override~
  // Iterate through items to see replaceable ones vs deleteables
  READ_LONG  0x2bc itm_off
  READ_LONG  0x2c0 itm_num

  // https://gibberlings3.github.io/iesdp/files/ids/bg2/general.htm
  // Check if human or not - leave non-humanoids alone
  READ_BYTE 0x271 general_byte

  PATCH_IF general_byte = 0x1 BEGIN
    FOR (index = 0 ; index < itm_num ; ++index) BEGIN // searches through items
      READ_ASCII (itm_off + (0x14 * index)) item

      // This was lifted from setup-cdtweaks.tp2 - shows how to make an item identified - how to check it? hmmm
      // WRITE_BYTE (itm_off + 0x10 + (0x14 * index)) (THIS BOR 0b00000001) // adds identified flag
      READ_BYTE (itm_off + 0x10 + (0x14 * index)) identified_byte
      SET is_identified = identified_byte BAND 0b00000001 // all the zeros mask out the stuff we ignore, we need matching 1s


      // Ok, slots reference indexes in this item data - we could check if stuff was equipped or not
      // Using is_identified NOT identified will let us get unidentified items with this, but we will still
      // end up scooping up basic gear, as the creature is_identified bit acts like an override (if an item itself
      // is never unidentified to begin with, this bit is simply missing most the time)
      PATCH_IF is_identified = 0 BEGIN

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*staf[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find staff item
          WRITE_ASCII (itm_off + (0x14 * index)) "staf01" #8 // replace with staf01
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*sw1h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "sw1h01" #8 // replace item
        END

        // Unconventional mod weapons
        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*\(cmswq\|cmdaq\|polsw\).*" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "sw1h01" #8 // replace item
        END

        // Unconventional mod armor
        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*\(armo\|xadvb\).*" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "misc17" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*sw2h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "sw2h01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*dagg[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "dagg01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*ax1h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "ax1h01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*ax2h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "ax1h01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*sper[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "sper01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*hamm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "hamm01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*halb[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "halb01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*blun[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "blun01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*scim[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "scim01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*waki[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "waki01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*kata[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "kata01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*sw3h[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "sw3h01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*mace[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "mace01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shield[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "shld01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shld[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "shld01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shbu[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "shbu01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shlg[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "shlg01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shmd[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "shmd01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*shsm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "shsm01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*xbow[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "xbow01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*bow[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "bow05" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*slng[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "slng01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*hel[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "helm01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*helm[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "helm01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*ioun[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "helm01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*cowl[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "helm01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*amul[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "amul01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*boot[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "boot01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*belt[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "belt01" #8 // replace item
        END

        // clck handles cloaks AND robes for some reason...
        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*clck[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
        WRITE_ASCII (itm_off + (0x14 * index)) "misc17" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*ring[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "ring01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*brac[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "brac01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*robe.*" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "clck11" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*leat[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "leat01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*chan[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "chan01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*plat[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "plat01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*armr[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "armr01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*slea[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "slea01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*pelt[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "pelt01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*hide[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "hide01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*chan[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "chan01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*spli[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "spli01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*plah[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "plah01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*plaf[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "plaf01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*arow[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "arow01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*dart[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "dart01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*bull[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "bull01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*bolt[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "bolt01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*dart[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "dart01" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*potn[0-9]+" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "potn08" #8 // replace item
        END

        PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*scrl.*" = 0) AND RANDOM(1 100) <= %del_per% BEGIN // find item
          WRITE_ASCII (itm_off + (0x14 * index)) "misc17" #8 // replace item
        END

        // Brute force method to remove all other matches
        // PATCH_IF ("%item%" STRING_COMPARE_REGEXP ".*\(staf\|sw1h\|sw2h\|dagg\|ax1h\|ax2h\|sper\|hamm\|halb\|blun\|scim\|waki\|kata\|sw3h\|mace\|shld\|shbu\|shlg\|shmd\|shsm\|xbow\|bow\|slng\|helm\|ioun\|cowl\|amul\|boot\|belt\|clck\|ring\|brac\|robe\|leat\|chan\|plat\|armr\|slea\|pelt\|hide\|chan\|spli\|plah\|plaf\|misc\|book\|bag\|potn\|arow\|dart\|bull\|bolt\)[0-9]+" != 0) AND RANDOM(1 100) <= %del_per% BEGIN // find NOT item
        //   WRITE_ASCII (itm_off + (0x14 * index)) "misc17" #8 // replace
        // END

      END // End of the is_identified check
    END // End of the item loop
  END // End of the human check
BUT_ONLY // end of items pass 1

COPY_EXISTING_REGEXP GLOB ~^.+\.cre$~ ~override~
  LPF DELETE_CRE_ITEM STR_VAR item_to_delete = "misc17" END
BUT_ONLY // end of items pass 2
